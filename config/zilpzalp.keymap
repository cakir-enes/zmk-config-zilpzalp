#include "../zmk-nodefree-config/helper.h"
#include "keypos.h"
#include "base_zilpzalp.h"

// zilpzalp key numbers
//     __________________________  __________________________
//    /     0  |  1  |  2  |  3  \/   4 |   5 |   6 |   7    \
// |  8  |  9  | 10  | 11  | 12  /\  13 |  14 |  15 |  16 | 17  |
//    \    18  | 19  | 20    /        \    21 |  22 |  23   /
//          \    24  | 25  /            \  26 |  27    /
//           --------------              --------------
//
//           ╭─────────────────┬─────────────────╮
//   ╭───────╯ LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 ╰───────╮
//  │      LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4     │
//  ╰───╮         LB2 LB1 LB0 │ RB0 RB1 RB2         ╭───╯
//      ╰───────────╮ LH1 LH0 │ RH0 RH1 ╭───────────╯
//                  ╰─────────┴─────────╯             */


#define ___ &trans

#define DEF 0  // layer shortcuts, must match order in which they are defined below
#define NUM 1
#define NAV 2
#define SYM 3
#define FUN 4

#define KEYS_L LT0 LT1 LT2 LT3 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2
#define KEYS_R RT0 RT1 RT2 RT3 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2
#define THUMBS LH1 LH0 RH0 RH1

#define meh(x) LS(LC(LA(x)))
#define hyp(x) LS(LC(LA(LG(x))))



ZMK_BEHAVIOR(hml, hold_tap,  // left-hand HRMs
    flavor = "balanced";
    tapping-term-ms = <250>;
    quick-tap-ms = <150>;
    hold-trigger-on-release;
    require-prior-idle-ms = <100>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
)

// one handed app switcher
ZMK_BEHAVIOR(swapper, tri_state,
    bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
    ignored-key-positions = <LT2>;
)

ZMK_BEHAVIOR(hmr, hold_tap,  // right-hand HRMs
    flavor = "balanced";
    tapping-term-ms = <250>;
    quick-tap-ms = <150>;
    hold-trigger-on-release;
    require-prior-idle-ms = <100>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
)

ZMK_BEHAVIOR(bs_del_num, mod_morph,
    bindings = <&lt NUM BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

ZMK_BEHAVIOR(ss_cw, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&sk LSHFT>, <&mo NUM>;
)

ZMK_COMBO(entr, &kp ENTER, LM2 LM1,  ALL, 25)
ZMK_COMBO(esc,  &kp ESCAPE, LM3 LM2, ALL, 25)

ZMK_LAYER(default_layer,
                    &kp W          &kp F          &kp P          &kp B          &kp J          &kp L          &kp U          &kp Y
          &hml LCTRL R    &hml LALT S     &hml LGUI T     &hml LSHFT H    &hml RALT K     &hmr RALT X     &hmr RSHFT N    &hmr RGUI A     &hmr LALT I     &hmr RCTRL O
                          &ss_cw          &kp G          &kp D                                        &kp M          &comsem        &dotcol
                                                        &my_lt NUM SQT &my_lt NAV SPACE &my_lt SYM E &my_lt FUN ENTER
)

ZMK_LAYER(num_layer,
                          &kp N9         &kp N8         &kp N7         &kp ASTERISK   &kp PLUS       &kp N7         &kp N8         &kp N9
          &hml LCTRL N0   &hml LALT N6    &hml LGUI N5    &hml LSHFT N4   &hml RALT SLASH &kp MINUS      &kp N4         &kp N5         &kp N6         &kp DOT
                          &kp N3         &kp N2         &kp N1                                       &kp N1         &kp N2         &kp N3
                                                        &trans         &trans         &kp E          &kp N0
)

ZMK_LAYER(nav_layer,
                &kp INSERT     &kp UP         &kp BSPC        &kp C_VOL_DN   &kp C_VOL_UP   &kp BSPC       &kp DEL        &kp INSERT
          &kp LCTRL       &hml LALT LEFT  &hml LGUI DOWN  &hml LSHFT RIGHT &kp C_MUTE     &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT      &kp TAB
                          &kp LC(LS(TAB))       &kp LC(TAB)    &swapper                                       &kp HOME       &kp PG_UP      &kp END
                                                        &trans         &trans         &caps_word             &trans
)

ZMK_LAYER(sym_layer,
                          &kp EXCL       &kp AMPS         &kp PIPE        &kp TILDE           &kp PLUS  &kp LBRC   &kp CARET    &kp RBRC
          &kp QMARK       &kp MINUS      &kp UNDERSCORE   &kp COLON       &kp BSLH            ___       &kp LPAR   &kp DOLLAR   &kp RPAR    &kp SLASH
                          &kp AT         &kp PERCENT      &kp GRAVE                                     &kp LBKT   &kp STAR     &kp RBKT
                                                          &kp LBKT         &kp EQUAL          &trans   &trans
)


ZMK_LAYER(fun_layer,
                       &bootloader    &trans         &bt BT_CLR     &bt BT_PRV     &kp F12        &kp F7         &kp F8         &kp F9
        &trans         &trans         &trans         &trans         &bt BT_NXT     &kp F11        &kp F4         &kp F5         &kp F6         &kp F10
                       &trans         &trans         &trans                                       &kp F1         &kp F2         &kp F3
                                                      &out OUT_TOG   &trans         &trans         &trans
)

//     __________________________  __________________________
//    /     1  |  2  |  3  |  4  \/   5 |   6 |   7 |   8    \
// | 10  | 11  | 12  | 13  | 14  ||  15 |  16 |  17 |  18 | 19  |
//    \    20  | 21  | 22  |     ||     |  23 |  24 |  25   /
//                \    26  | 27  /\  28 |  29    /
//                 --------------  --------------
